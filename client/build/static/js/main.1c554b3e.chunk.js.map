{"version":3,"sources":["components/navbar.component.js","components/jumbotron.component.js","components/container.component.js","components/search.component.js","utils/API.js","components/books.component.js","components/saved.component.js","components/view.component.js","components/view-thumb.component.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","Jumbotron","Container","props","fluid","children","SearchBar","onChange","handleInputChange","value","name","placeholder","handleFormSubmit","axios","get","console","log","delete","bookData","post","Books","state","search","books","book","bookID","redirect","event","target","setState","searching","preventDefault","searchBooks","saveBook","sBook","API","title","volumeInfo","authors","join","synopsis","description","thumbnail","imageLinks","smallThumbnail","infoLink","catch","err","viewBook","then","res","holdBook","data","items","this","to","pathname","map","key","alt","width","src","Component","Saved","deleteBook","_id","getImageLink","link","location","App","exact","path","render","component","View","ViewThumb","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.1c554b3e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Navbar() {\r\n    \r\n    return (\r\n\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-4 container\">\r\n            <a className=\"navbar-brand\" href=\"/search\">Google Books</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item active\">\r\n                        <a className=\"nav-link\" href=\"/search\" onClick={() => {\r\n                        }\r\n                        }>Search</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/saved\" onClick={() => {\r\n                        }\r\n                        }>Saved</a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\n// import { useStoreContext } from \"../utils/GlobalState\";\r\n\r\n\r\n\r\nfunction Jumbotron() {\r\n    // const [state, dispatch] = useStoreContext();\r\n\r\n    return (\r\n\r\n        <div className=\"jumbotron jumbotron-fluid p-2 mb-0\">\r\n            <div className=\"container\">\r\n                <h1 className=\"display-4\">Google Books Search</h1>\r\n                <p className=\"lead\">Search for and Save Books of Interest</p>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\n\r\nfunction Container(props) {\r\n  return <div className={`container${props.fluid ? \"-fluid\" : \"\"}`}>{props.children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\nimport Container from \"./container.component\";\r\n\r\nfunction SearchBar(props) {\r\n\r\n    return (\r\n        <Container>\r\n            <form className=\"form-inline\">\r\n                <div>\r\n                    <input\r\n                        type=\"text\"\r\n                        onChange={props.handleInputChange} value={props.value}\r\n                        name=\"search\"\r\n                        className=\"form-control mb-2 mr-sm-2\"\r\n                        id=\"search\"\r\n                        placeholder=\"enter search term\" />\r\n                    <br />\r\n                    <p>\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-primary mb-2\"\r\n                            onClick={props.handleFormSubmit}>Submit</button>\r\n                    </p>\r\n                </div>\r\n            </form>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default SearchBar;","import axios from \"axios\";\r\nexport default {\r\n  // Gets all books\r\n  getBooks: function () {\r\n    return axios.get(\"/api/books\");\r\n  },\r\n  // Gets the book with the given id\r\n  getBook: function (id) {\r\n    console.log(\"------------\");\r\n    console.log(id);\r\n    return axios.get(\"/api/books/\" + id);\r\n  },\r\n  // Deletes the book with the given id\r\n  deleteBook: function (id) {\r\n    return axios.delete(\"/api/books/\" + id);\r\n  },\r\n  // Saves a book to the database\r\n  saveBook: function (bookData) {\r\n    return axios.post(\"/api/books\", bookData);\r\n  },\r\n  // get the list of books from google\r\n  getGoogleBooks: function (name) {\r\n    return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + name);\r\n  },\r\n  // get the list of books from google\r\n  getGoogleBook: function (id) {\r\n    return axios.get(\"https://www.googleapis.com/books/v1/volumes/\" + id)\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport SearchBar from \"./search.component\";\r\nimport Container from \"./container.component\";\r\nimport API from \"../utils/API\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default class Books extends Component {\r\n    state = {\r\n        search: \"\",\r\n        name: \"\",\r\n        books: [],\r\n        book: [],\r\n        bookID: \"\",\r\n        redirect: null\r\n    };\r\n\r\n    // componenetDidMount() {\r\n    //     this.setState({\r\n    //         redirect: \"/search\"\r\n    //     })\r\n    // }\r\n\r\n    componentDidUpdate() {\r\n        // if (this.state.search === \"\" && this.state.searching) {\r\n        //     this.setState({\r\n        //         searching: false\r\n        //     });\r\n        // } else if (this.state.searching) {\r\n        //     this.searchBooks(this.state.search);\r\n        // }\r\n    }\r\n\r\n    searchBooks(title) {\r\n        API.getGoogleBooks(title)\r\n            .then(res => {\r\n                this.setState({ books: res.data.items });\r\n            })\r\n            .catch(err => {\r\n                console.log(\"---- Dang! ----\");\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    handleInputChange = event => {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        this.setState({\r\n            searching: true,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        this.searchBooks(this.state.search);\r\n    };\r\n\r\n    saveBook = sBook => {\r\n        API.saveBook({\r\n            title: sBook.volumeInfo.title,\r\n            authors: sBook.volumeInfo.authors.join(\", \"),\r\n            synopsis: sBook.volumeInfo.description,\r\n            thumbnail: sBook.volumeInfo.imageLinks.smallThumbnail,\r\n            infoLink: sBook.volumeInfo.infoLink\r\n        })\r\n            .catch(err => console.log(err))\r\n        this.setState({\r\n            redirect: \"/saved\",\r\n            bookID: sBook\r\n        });\r\n    };\r\n\r\n    viewBook = sBook => {\r\n        API.getGoogleBook(sBook)\r\n            .then(res => {\r\n                let holdBook = res.data.volumeInfo;\r\n                // console.log(holdBook);\r\n                // console.log(\"------- holdBook ------\");\r\n                this.setState({\r\n                    redirect: \"/view\",\r\n                    bookID: sBook,\r\n                    book: holdBook\r\n                });\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to={{\r\n                pathname: this.state.redirect,\r\n                state: {\r\n                    id: this.state.bookID,\r\n                    book: this.state.book\r\n                }\r\n            }} />\r\n        }\r\n        return (\r\n            <Container>\r\n                <div className=\"container\">\r\n                    <SearchBar\r\n                        value={this.state.search}\r\n                        handleInputChange={this.handleInputChange}\r\n                        handleFormSubmit={this.handleFormSubmit}\r\n                    />\r\n                    <ul>\r\n                        {this.state.books.map(book => (\r\n                            <li key={book.id} className=\"card p-2 m-4 w-50\">\r\n                                {book.volumeInfo.title}<hr />\r\n                                {book.volumeInfo.authors}<hr />\r\n                                <img alt=\"book\" width=\"250\" src={book.volumeInfo.imageLinks ? book.volumeInfo.imageLinks.smallThumbnail : \"\"} /><hr />\r\n                                {book.volumeInfo.description}<hr />\r\n                                <div></div>\r\n                                <div></div>\r\n                                <button onClick={() => this.saveBook(book)} className=\"save btn btn-success\">save me</button><hr />\r\n                                <button onClick={() => this.viewBook(book.id)} className=\"save btn btn-info\">view me</button>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </Container>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport Container from \"./container.component\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default class Saved extends Component {\r\n    state = {\r\n        name: \"\",\r\n        books: [],\r\n        bookID: \"\",\r\n        redirect: null\r\n    };\r\n\r\n    componentDidMount() {\r\n        API.getBooks()\r\n            .then(res => {\r\n                this.setState({ books: res.data });\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    handleInputChange = event => {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        this.setState({\r\n            searching: true,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        console.log(event.id);\r\n    };\r\n\r\n    deleteBook = sBook => {\r\n        API.deleteBook(sBook)\r\n            .then(res => {\r\n                this.setState({\r\n                    redirect: \"/saved\"\r\n                });\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    viewBook = sBook => {\r\n        // console.log(sBook);\r\n        API.getBook(sBook)\r\n            .then(res => {\r\n                let holdBook = res.data;\r\n                this.setState({\r\n                    redirect: \"/view-thumb\",\r\n                    bookID: sBook,\r\n                    book: holdBook\r\n                });\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to={{\r\n                pathname: this.state.redirect,\r\n                state: {\r\n                    id: this.state.bookID,\r\n                    book: this.state.book\r\n                }\r\n            }} />\r\n        }\r\n        return (\r\n            <Container>\r\n                <div>\r\n                    <div><h3><p>these are your saved books</p></h3></div>\r\n                    <ul >\r\n                        {this.state.books.map(book => (\r\n                            <li key={book._id} className=\"card p-2 m-4 w-50\">\r\n                                {book.title}<hr />\r\n                                {book.authors}<hr />\r\n                                <img alt=\"book\" width=\"250\" src={book.thumbnail} /><hr />\r\n                                {book.synopsis}<hr />\r\n                                <p><a href=\"/search\">search</a>&nbsp;|&nbsp;<a href=\"/saved\">saved</a></p><hr/>\r\n                                <button onClick={() => this.deleteBook(book._id)} className=\"save btn btn-danger\">delete me</button><hr />\r\n                                <button onClick={() => this.viewBook(book._id)} className=\"save btn btn-info\">view me</button>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </Container>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport Container from \"./container.component\";\r\nimport API from \"../utils/API\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default class Saved extends Component {\r\n    state = {\r\n        name: \"\",\r\n        books: [],\r\n        bookID: \"\",\r\n        redirect: null\r\n    };\r\n\r\n    getImageLink(link) {\r\n        return (link ? link : \"\");\r\n    }\r\n\r\n    saveBook = sBook => {\r\n        API.saveBook({\r\n            title: sBook.book.title,\r\n            authors: sBook.book.authors.join(\", \"),\r\n            synopsis: sBook.book.description,\r\n            thumbnail: this.getImageLink(sBook.book.imageLinks.thumbnail),\r\n            infoLink: sBook.infoLink\r\n        })\r\n            .catch(err => console.log(err))\r\n        this.setState({\r\n            redirect: \"/saved\",\r\n            bookID: sBook.id\r\n        });\r\n    };\r\n\r\n    render() {\r\n            if (this.state.redirect) {\r\n                return <Redirect to={{\r\n                    pathname: this.state.redirect,\r\n                    state: {\r\n                        id: this.state.bookID,\r\n                        book: this.state.book\r\n                    }\r\n                }} />\r\n            }\r\n            return (\r\n                <Container>\r\n                    <div>\r\n                        {/* <p>{this.props.location.state.id}</p> */}\r\n                        <p>{this.props.location.state.book.title}</p>\r\n                        <p>{this.props.location.state.book.authors}</p>\r\n                        <p><img src={this.props.location.state.book.imageLinks ? this.props.location.state.book.imageLinks.thumbnail : \"\"} alt=\"book cover\"></img></p>\r\n                        <p><button onClick={() => this.saveBook(this.props.location.state)} className=\"save btn btn-success\">save me</button></p><hr />\r\n                        <p>{this.props.location.state.book.description}</p>\r\n                    </div>\r\n                </Container>\r\n            )\r\n        }\r\n    }","import React, { Component } from \"react\";\r\nimport Container from \"./container.component\";\r\nimport API from \"../utils/API\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default class Saved extends Component {\r\n    state = {\r\n        name: \"\",\r\n        books: [],\r\n        bookID: \"\",\r\n        redirect: null\r\n    };\r\n\r\n    getImageLink(link) {\r\n        return (link ? link : \"\");\r\n    }\r\n\r\n    deleteBook = sBook => {\r\n        API.deleteBook(sBook)\r\n            .then(res => {\r\n                this.setState({\r\n                    redirect: \"/saved\"\r\n                    // books: res.data\r\n                });\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to={{\r\n                pathname: this.state.redirect,\r\n                state: {\r\n                    id: this.state.bookID,\r\n                    book: this.state.book\r\n                }\r\n            }} />\r\n        }\r\n        return (\r\n            <Container>\r\n                <div><h3><p>this is a saved book!</p></h3></div>\r\n                <div>\r\n                    {/* <p>{this.props.location.state.id}</p> */}\r\n                    <p>{this.props.location.state.book.title}</p>\r\n                    <p>{this.props.location.state.book.authors}</p>\r\n                    <p><img src={this.props.location.state.book.thumbnail ? this.props.location.state.book.thumbnail : \"\"} alt=\"book cover\"></img></p>\r\n                    <p><button onClick={() => this.deleteBook(this.props.location.state.id)} className=\"save btn btn-danger\">delete book</button></p><hr />\r\n                    <p>{this.props.location.state.book.synopsis}</p><br/>\r\n\r\n                </div>\r\n            </Container>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Navbar from \"./components/navbar.component\";\r\nimport Jumbotron from \"./components/jumbotron.component\";\r\nimport Books from \"./components/books.component\";\r\nimport Saved from \"./components/saved.component\";\r\nimport View from \"./components/view.component\";\r\nimport ViewThumb from \"./components/view-thumb.component\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container\">\r\n\r\n      <Jumbotron />\r\n      <Navbar />\r\n      <Router>\r\n        <Switch>\r\n          <Route exact\r\n            path=\"/\"\r\n            render={() => {\r\n              return (\r\n                < Redirect to=\"/search\" />\r\n              )\r\n            }}\r\n          />\r\n          <Route path=\"/search\" component={Books} />\r\n          <Route path=\"/saved\" component={Saved} />\r\n          <Route path=\"/view\" component={View} />\r\n          <Route path=\"/view-thumb\" component={ViewThumb} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <App />,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}